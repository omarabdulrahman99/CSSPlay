[{"C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\index.js":"1","C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\App.js":"2","C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\reportWebVitals.js":"3","C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\home\\Home.js":"4","C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\center\\Center.js":"5","C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\flexlove\\Flexlove.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":566,"mtime":1616546183338,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":329,"mtime":1616546219598,"results":"11","hashOfConfig":"8"},{"size":315,"mtime":1616545276626,"results":"12","hashOfConfig":"8"},{"size":829,"mtime":1636924201183,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"cg6rbf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\index.js",[],["29","30"],"C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\App.js",["31"],"import logo from './logo.svg';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Home from './home/Home';\nimport Center from './center/Center';\nimport Flexlove from './flexlove/Flexlove';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/center\" component={Center} />\n          <Route path=\"/flexlove\" component={Flexlove} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\reportWebVitals.js",[],"C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\home\\Home.js",["32"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Home () {\r\n  return(\r\n  \t<div>\r\n       <div>\r\n        <Link to=\"/center\">\r\n         Centering\r\n        </Link>\r\n        <Link to=\"/flexlove\">\r\n         Flexlove\r\n        </Link>\r\n      </div>\r\n  \t</div>\r\n  \t)\r\n}\r\n\r\nexport default Home;","C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\center\\Center.js",[],"C:\\Users\\NightTiger\\Desktop\\wwZ\\JS\\CSSPlay\\client\\src\\flexlove\\Flexlove.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":1,"column":16,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":7,"column":13,"nodeType":"45","endLine":11,"endColumn":4},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]